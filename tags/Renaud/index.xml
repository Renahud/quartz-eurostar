<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Renaud on</title><link>https://renahud.github.io/quartz-eurostar/tags/Renaud/</link><description>Recent content in Renaud on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://renahud.github.io/quartz-eurostar/tags/Renaud/index.xml" rel="self" type="application/rss+xml"/><item><title>Chaos engeneering using Docker compose</title><link>https://renahud.github.io/quartz-eurostar/draft/Chaos-engineering-using-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/Chaos-engineering-using-docker/</guid><description>Chaos engeneering using Docker compose By Richard Rostad
Chaos Engineering: A systematic approach to pushing a system encironment outside its comfort zone in order to leard about the system(s) under test and discover potential problems before they become actual problems.</description></item><item><title>Defects dont kill you, they make you stronger</title><link>https://renahud.github.io/quartz-eurostar/conferences/Defects-dont-kill-you/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/Defects-dont-kill-you/</guid><description>We should document all defects and try to cover them wih automated tests when possible. It will grow the coverage and help build a stronger application.</description></item><item><title>draft - mama said my shape was ok</title><link>https://renahud.github.io/quartz-eurostar/draft/draft-mama-said-my-shape-was-ok/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/draft-mama-said-my-shape-was-ok/</guid><description>Mama said my shape was Okay by Jihad Ghandour
3 main shapes of testers
I Knows a lot about 1 topic T Knows a lot about 1 topic + knows a little about a lot of topics seen as better than I X Knows a lot about one topic Is also a strong leader Concerns These definitions are like bad requirements :</description></item><item><title>draft-404 context not found</title><link>https://renahud.github.io/quartz-eurostar/draft/draft-404-context-not-found/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/draft-404-context-not-found/</guid><description>Talk by Chris Armstrong
new job :
no pc no email no access to code no introduction no exp with thech stack no boss for a week no understanding of the product had:</description></item><item><title>draft-keynote-renaud</title><link>https://renahud.github.io/quartz-eurostar/draft/draft-keynote-renaud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/draft-keynote-renaud/</guid><description>draft - Keynotes My essence of Testing by Richard Edgreen
Testing starts in your head, it&amp;rsquo;s dependant of your understanding of the problem the application is trying to solve.</description></item><item><title>draft-keynote2-Renaud</title><link>https://renahud.github.io/quartz-eurostar/draft/draft-keynote2-Renaud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/draft-keynote2-Renaud/</guid><description>Testing, Engeneering, Tools &amp;amp; Futures by Paul Gerrard
Devops Team of 7 people, maintaining 7 applications
Continuous delivery, continuous discomfort &amp;hellip; in 1984 !</description></item><item><title>keynote - drawing lines around the fog</title><link>https://renahud.github.io/quartz-eurostar/conferences/keynote-drawing-lines-around-the-fog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/keynote-drawing-lines-around-the-fog/</guid><description>Keynote : Drawing lines around the fog by Alexandra Schladebeck
or 7 Things I might be wrong about
Predictions Quality will become even more important, and we&amp;rsquo;ll screw it up Exemples of current quality challenges :</description></item><item><title>Keynote : My Essence of Testing - Understanding Relations</title><link>https://renahud.github.io/quartz-eurostar/conferences/Keynote-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/Keynote-1/</guid><description>Keynote : My Essence of Testing - Understanding Relations My essence of Testing by Richard Edgreen
Testing starts in your head, it&amp;rsquo;s dependant of your understanding of the problem the application is trying to solve.</description></item><item><title>Keynote Michael Bolton - Lost in transformation - Renaud</title><link>https://renahud.github.io/quartz-eurostar/conferences/Keynote-Michael-Bolton-Lost-in-transformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/Keynote-Michael-Bolton-Lost-in-transformation/</guid><description>Keynote : Lost in transformation by Michael Bolton
Digital transformation
Most applications aren&amp;rsquo;t designed for the cases where everithing is not going as planed.</description></item><item><title>Put on your TestOps shoes</title><link>https://renahud.github.io/quartz-eurostar/draft/testOps-shoes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/testOps-shoes/</guid><description>Put on your TestOps shoes By Dawid Pacia
continuous build -&amp;gt; continuous validation -&amp;gt; continuous delivery -&amp;gt; continuous monitoring
TestOps:</description></item><item><title>Saving Software industry problems by applying 'System Thinking' to ourselves</title><link>https://renahud.github.io/quartz-eurostar/draft/draft-Solving-software-system-thinking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/draft-Solving-software-system-thinking/</guid><description>Saving Software industry problems by applying &amp;lsquo;System Thinking&amp;rsquo; to ourselves by Andrew Brown
[[Thinking in Systems]] Donella Meadows
What is a System ?</description></item><item><title>Tutorial F - From Business Workflows to Automated Tests</title><link>https://renahud.github.io/quartz-eurostar/conferences/Tutorial-F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/Tutorial-F/</guid><description>Tutorail By Dr Anne Kramer, using Yest (Yest has a jira integration)
Introduction We want to Atomalte Tests, but it is difficult.</description></item><item><title>Tutorial I - Renaud</title><link>https://renahud.github.io/quartz-eurostar/draft/Tutorial-I-draft-Renaud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/draft/Tutorial-I-draft-Renaud/</guid><description>tutorial by Pathfinder
What is simplification ? What is simpler is easier to take in. There&amp;rsquo;s value in simplicity itself.</description></item><item><title>Tutorial I - Simplicity: Distilling and Refining Test Communication</title><link>https://renahud.github.io/quartz-eurostar/conferences/Tutorial-I/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/Tutorial-I/</guid><description>Simplicity: Distilling and Refining Test Communication Simplification It doesn&amp;rsquo;t need to just look simpler but to actually be simpler.
There is value in simplicity :</description></item><item><title>What's your Test Design Debt ? Avoid the inevitable!</title><link>https://renahud.github.io/quartz-eurostar/conferences/test-design-debt-Renaud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://renahud.github.io/quartz-eurostar/conferences/test-design-debt-Renaud/</guid><description>What&amp;rsquo;s your Test Design Debt ? Avoid the inevitable! by Wim Decoutere
Requirements WILL CHANGE business processes change Cometitors innovate Legislation regulation Business change priorities New technologies Users ask new features Defects may induce changes to be fixed When faced with a change, we can accept, reject or postpone it.</description></item></channel></rss>